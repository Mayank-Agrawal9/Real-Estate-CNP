"""
Django settings for real_estate project.

Generated by 'django-web_admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

try:
    from real_estate.settings_local import *
    from real_estate.settings_rest import *
except ImportError:
    pass

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
location = lambda x: os.path.join(os.path.realpath(BASE_DIR), x)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vu_k3)s3bx=9gtu!42$i*k*b4(x=v@b(fej&z3em($7*8000yg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # 'admin_interface',
    # 'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'storages',
    'django_ckeditor_5',
    'auditlog',
    'django_crontab',
]

CUSTOM_APPS = [
    'accounts.apps.AccountsConfig',
    'agency.apps.AgencyConfig',
    'master.apps.MasterConfig',
    'payment_app.apps.PaymentAppConfig',
    'property.apps.PropertyConfig',
    'p2pmb.apps.P2PmbConfig',
    'web_admin.apps.WebAdminConfig',
]

INSTALLED_APPS += CUSTOM_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'real_estate.middleware.CustomAuditlogMiddleware'
]

ROOT_URLCONF = 'real_estate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'real_estate.wsgi.application'


try:
    if ON_DEVELOPMENT:
        INSTALLED_APPS += ['silk']
        MIDDLEWARE += ['silk.middleware.SilkyMiddleware']
except:
    pass

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


LANGUAGES = [
    ('en', 'English'),
    ('hi', 'Hindi'),
    ('fr', 'French'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_HOST = 'smtp-relay.sendinblue.com'
EMAIL_HOST_USER = 'clicknpaydigital@gmail.com'
DEFAULT_FROM_EMAIL = 'clicknpaydigital@gmail.com'
EMAIL_HOST_PASSWORD = 'WHkxQ8J6KZhE2rTv'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False


if PRODUCTION:
    AWS_ACCESS_KEY_ID = 'AKIAWL5SMRGLVFTNZLOH'
    AWS_SECRET_ACCESS_KEY = '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'
    AWS_STORAGE_BUCKET_NAME = 'cnp-realestate-dev'
    AWS_S3_REGION_NAME = 'ap-south-1'
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }

    # Static files settings
    AWS_STATIC_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_STATIC_LOCATION}/'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

    # Media files settings
    AWS_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
else:
    STATIC_URL = '/static/'
    STATIC_ROOT = location('public/static/')
    STATICFILES_DIRS = (
        location('static'),
    )
    MEDIA_ROOT = os.path.join(BASE_DIR, 'public/media')
    MEDIA_URL = '/media/'
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'


CKEDITOR_UPLOAD_PATH = "ckeditor_uploads/"

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': {
            'items': [
                'heading', '|', 'bold', 'italic', 'underline', 'strikethrough', '|',
                'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
                'bulletedList', 'numberedList', 'todoList', 'blockQuote', '|',
                'outdent', 'indent', '|',
                'code', 'codeBlock', 'sourceEditing', '|',
                'link', 'insertImage', 'imageUpload', 'mediaEmbed', '|',
                'insertTable', 'undo', 'redo', 'removeFormat', '|',
                {
                    'name': 'customDropdown',
                    'label': 'Custom Tools',
                    'items': ['specialCharacters', 'horizontalLine', 'pageBreak']
                }
            ],
            'shouldNotGroupWhenFull': True,
        },
        'image': {
            'toolbar': [
                'imageTextAlternative', '|',
                'imageStyle:alignLeft', 'imageStyle:alignRight', 'imageStyle:alignCenter', '|',
                'resizeImage:50', 'resizeImage:75', 'resizeImage:original'
            ],
            'styles': ['full', 'side', 'alignLeft', 'alignRight', 'alignCenter']
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells', 'tableProperties', 'tableCellProperties'
            ],
        },
        'list': {
            'properties': {
                'styles': True,
                'startIndex': True,
                'reversed': True,
            }
        },
        'resize': {
            'minWidth': 300,
            'maxWidth': 1200
        },
    }
}

AUDITLOG_INCLUDE_ALL_MODELS = True


# Cron Jobs

# CRONJOBS = [
#     ('0 0 1 * *', 'real_estate.cron.monthly_task')
# ]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:4200',
    'http://localhost:5000',
    'http://localhost:3000',
    # 'http://64.225.84.50',
    'http://139.59.71.1'
]

